// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// compute_blocked_stats_lognorm
Rcpp::List compute_blocked_stats_lognorm(Rcpp::List bygroup, SEXP inmat, Rcpp::NumericVector sf, double pseudo);
RcppExport SEXP _scran_compute_blocked_stats_lognorm(SEXP bygroupSEXP, SEXP inmatSEXP, SEXP sfSEXP, SEXP pseudoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type bygroup(bygroupSEXP);
    Rcpp::traits::input_parameter< SEXP >::type inmat(inmatSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type sf(sfSEXP);
    Rcpp::traits::input_parameter< double >::type pseudo(pseudoSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_blocked_stats_lognorm(bygroup, inmat, sf, pseudo));
    return rcpp_result_gen;
END_RCPP
}
// compute_blocked_stats_norm
Rcpp::List compute_blocked_stats_norm(Rcpp::List bygroup, SEXP inmat, Rcpp::NumericVector sf);
RcppExport SEXP _scran_compute_blocked_stats_norm(SEXP bygroupSEXP, SEXP inmatSEXP, SEXP sfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type bygroup(bygroupSEXP);
    Rcpp::traits::input_parameter< SEXP >::type inmat(inmatSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type sf(sfSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_blocked_stats_norm(bygroup, inmat, sf));
    return rcpp_result_gen;
END_RCPP
}
// compute_blocked_stats_none
Rcpp::List compute_blocked_stats_none(Rcpp::List bygroup, SEXP inmat);
RcppExport SEXP _scran_compute_blocked_stats_none(SEXP bygroupSEXP, SEXP inmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type bygroup(bygroupSEXP);
    Rcpp::traits::input_parameter< SEXP >::type inmat(inmatSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_blocked_stats_none(bygroup, inmat));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_scran_compute_blocked_stats_lognorm", (DL_FUNC) &_scran_compute_blocked_stats_lognorm, 4},
    {"_scran_compute_blocked_stats_norm", (DL_FUNC) &_scran_compute_blocked_stats_norm, 3},
    {"_scran_compute_blocked_stats_none", (DL_FUNC) &_scran_compute_blocked_stats_none, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_scran(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
